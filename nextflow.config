import groovy.json.JsonSlurper
def JsonSlurper = new JsonSlurper()
azure_config = JsonSlurper.parse(new File("./credentials.json"))

params {
  /* Input, genomes, databases and output parameters */
  reads = 'az://biosustaindls2/raw/data/*_{1,2}.fq.gz'
  host_genome = 'az://biosustaindls2/databases/host_genome/GCF_022201045.2_DVS_A1.0_genomic.fna'
  genomedir = "az://biosustaindls2/databases/host_genome"
  outdir = 'az://biosustaindls2/processed/results'
  metaphlan_db = "az://biosustaindls2/databases/metaphlan_db"
  eggnog_db = "az://biosustaindls2/databases/eggnog_db"

  /* Kneaddata parameters */
  //bypass-trim = false
  //trimmomatic-options = "SLIDINGWINDOW:4:20 MINLEN:70"
  //sequencer-source = "NexteraPE"  // Available sequencers: ["NexteraPE","TruSeq2","TruSeq3"]

  /* Adapter removal */
  adapterTrimParameters = "--trimns --trimqualities --minquality 30 --minlength 100 --adapter1 AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"
}

profiles {
  az_test {

    docker.enabled = true
    dag.overwrite = true

    process {
      executor = 'azurebatch'
    }

    azure {
      storage {
        accountName = azure_config["storageAccountName"]
        accountKey = azure_config["storageAccountKey"]
      }
      batch {
        location = 'westeurope'
        accountName = azure_config["batchAccountName"]
        accountKey = azure_config["batchAccountKey"]
        autoPoolMode = true
        allowPoolCreation = true
        pools {
          auto {
              autoScale = true
              vmType = 'Standard_D8_v3'
              maxVmCount = 10
          }
        }
      }
    }
  }

  local {
    docker.enabled = true
    dag.overwrite = true
  }
}